env:
  REGISTRY: ghcr.io/libertyteeth/anthropic-quickstarts-libertyteeth
name: build

on:
  pull_request:
    paths:
      - .github/**
      - computer-use-demo/**
  push:
    branches:
      - main
    paths:
      - .github/**
      - computer-use-demo/**

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: set_image_tag
        run: |
          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          echo "SHORT_SHA=$SHORT_SHA" >> "$GITHUB_ENV"
          echo "SHORT_SHA=$SHORT_SHA" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: computer-use-demo
          platforms: linux/${{ matrix.platform }}
          push: true
          tags: |
            ${REGISTRY}:computer-use-demo-${SHORT_SHA}-${{ matrix.platform }}
            ${REGISTRY}:computer-use-demo-latest-${{ matrix.platform }}

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tag
        run: |
          echo "SHORT_SHA=${{ needs.build.outputs.SHORT_SHA }}" >> "$GITHUB_ENV"

      - name: Create SHA manifest and push
        run: |
          docker buildx imagetools create -t \
            ${REGISTRY}:computer-use-demo-${SHORT_SHA} \
            ${REGISTRY}:computer-use-demo-${SHORT_SHA}-amd64 \
            ${REGISTRY}:computer-use-demo-${SHORT_SHA}-arm64

      - name: Create latest manifest and push
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker buildx imagetools create -t \
            ${REGISTRY}:computer-use-demo-latest \
            ${REGISTRY}:computer-use-demo-latest-amd64 \
            ${REGISTRY}:computer-use-demo-latest-arm64
